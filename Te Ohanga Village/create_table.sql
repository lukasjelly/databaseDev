CREATE TABLE DEGREE (
	DEGREE_ID VARCHAR(100) PRIMARY KEY NOT NULL, /*Changed this from int to varchar*/
	DEGREE_TITLE VARCHAR(100) NOT NULL,
	DEGREE_DIRECTOR_FNAME VARCHAR(100) NOT NULL,
	DEGREE_DIRECTOR_LNAME VARCHAR(100) NOT NULL,
	DEGREE_PHONE VARCHAR(100) NOT NULL,
	DEGREE_ROOM_NUMBER VARCHAR(100) NOT NULL,
	DEGREE_DEPARTMENT_NAME VARCHAR(100) NOT NULL
);

CREATE TABLE ADVISOR (
	ADVISOR_ID INT PRIMARY KEY NOT NULL,
    ADVISOR_FNAME VARCHAR(100) NOT NULL,
    ADVISOR_LNAME VARCHAR(100) NOT NULL,
    ADVISOR_DEPARTMENT VARCHAR(100) NOT NULL,
    ADVISOR_POSTION VARCHAR(100) NOT NULL,	
    ADVISOR_PHONE VARCHAR(100) NOT NULL,
    ADVISOR_ROOM_NUMBER VARCHAR(100) NOT NULL
);

CREATE TABLE STUDENT(
	STUDENT_ID INT PRIMARY KEY NOT NULL,
	ADVISOR_ID INT,
	STUDENT_FIRST_NAME VARCHAR(100) NOT NULL,
	STUDENT_LAST_NAME VARCHAR(100) NOT NULL,
	STUDENT_HOME_ADDRESS VARCHAR(100) NOT NULL,
	STUDENT_DOB DATE NOT NULL, /*Changed from int to date*/
	STUDENT_GENDER VARCHAR(100) NOT NULL,
	STUDENT_CATEGORY VARCHAR(100) NOT NULL,
	STUDENT_NATIONALITY VARCHAR(100) NOT NULL,
	STUDENT_SMOKER VARCHAR(100) NOT NULL,
	STUDENT_COMMENTS VARCHAR(100),
	STUDENT_STATUS VARCHAR(100) NOT NULL,
	DEGREE_ID VARCHAR(100) NOT NULL, /*changed from int to varchar and added not null*/
	FOREIGN KEY (DEGREE_ID) REFERENCES DEGREE(DEGREE_ID),
	FOREiGN KEY (ADVISOR_ID) REFERENCES ADVISOR(ADVISOR_ID)
);

CREATE TABLE NEXT_OF_KIN (
	STUDENT_ID INT PRIMARY KEY NOT NULL,
	NOK_FNAME VARCHAR(100)  NOT NULL,
	NOK_LNAME VARCHAR(100)  NOT NULL,
    NOK_RELATIONSHIP VARCHAR(100)  NOT NULL,
    NOK_PHONE VARCHAR(100)  NOT NULL,
    NOK_ADDRESS VARCHAR(100)  NOT NULL,
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID)
);

CREATE TABLE LEASE (
	LEASE_ID INT PRIMARY KEY NOT NULL,
	STUDENT_ID INT NOT NULL,
	LEASE_DURATION_MONTHS INT NOT NULL,
	LEASE_START_DATE DATE NOT NULL,
    LEASE_END_DATE DATE NOT NULL,
    LEASE_MOVE_IN_DATE DATE NOT NULL,
    LEASE_MOVE_OUT_DATE DATE NOT NULL,
	FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT (STUDENT_ID)
);

CREATE TABLE INVOICE(
	INVOICE_NUMBER VARCHAR(100) PRIMARY KEY NOT NULL,/*Changed from int to varchar*/
    LEASE_ID INT NOT NULL,
    INVOICE_SEMESTER VARCHAR(100) NOT NULL,
    INVOICE_PAYMENT_DUE DATE NOT NULL,
    INVOICE_PAYMENT_DATE DATE,
    INVOICE_PAY_METHOD VARCHAR(100),
	FOREIGN KEY (LEASE_ID) REFERENCES LEASE (LEASE_ID)
);

CREATE TABLE INVOICE_REMINDER(
    REMINDER_NUMBER VARCHAR(100) PRIMARY KEY,/*Changed from int to varchar*/
    INVOICE_NUMBER VARCHAR(100) NOT NULL,
    INVOICE_REMINDER_DATE DATE NOT NULL,
    FOREIGN KEY (INVOICE_NUMBER) REFERENCES INVOICE (INVOICE_NUMBER)
);

CREATE TABLE ACC_STAFF (
	STAFF_ID INT PRIMARY KEY NOT NULL,
	STAFF_FNAME VARCHAR(100) NOT NULL,
	STAFF_LNAME VARCHAR(100) NOT NULL,
	STAFF_HOME_ADDRESS_NUMBER INT NOT NULL,
	STAFF_HOME_ADDRESS_NAME VARCHAR(100) NOT NULL,
	STAFF_SUBURB VARCHAR(100) NOT NULL,
	STAFF_CITY VARCHAR(100) NOT NULL,
	STAFF_PHONE VARCHAR(100) NOT NULL,
    STAFF_DOB DATE NOT NULL,
    STAFF_LOCATION VARCHAR(100) NOT NULL,
    STAFF_ROLE VARCHAR(100) NOT NULL
);

CREATE TABLE PLACE (
    PLACE_ID VARCHAR(100) PRIMARY KEY NOT NULL,/*Changed from int to varchar*/
    STUDENT_ID INT,
    PLACE_MONTHLY_RENT INT NOT NULL,
    PLACE_TYPE VARCHAR(100) NOT NULL,
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(STUDENT_ID)
);

CREATE TABLE INSPECTION (
    INSPECTION_ID VARCHAR(100) PRIMARY KEY NOT NULL,/*Changed from int to varchar*/
    PLACE_ID VARCHAR(100) NOT NULL,/*Changed from int to varchar*/
    STAFF_ID INT NOT NULL,
    INSPECTION_DATE DATE NOT NULL,/*Added not null*/
    INSPECTION_RATING INT,
    INSPECTION_COMMENTS VARCHAR (100),
    FOREIGN KEY (STAFF_ID) REFERENCES ACC_STAFF(STAFF_ID),
    FOREIGN KEY (PLACE_ID) REFERENCES PLACE(PLACE_ID)
);

/* HAS BEEN REMOVED
CREATE TABLE INSPECTION_PLACE (
    PLACE_ID INT PRIMARY KEY NOT NULL,
    INSPECTION_ID INT,
    FOREIGN KEY (PLACE_ID) REFERENCES PLACE(PLACE_ID),
    FOREIGN KEY (INSPECTION_ID) REFERENCES INSPECTION(INSPECTION_ID)
);
*/

CREATE TABLE FLAT (
	FLAT_NUMBER VARCHAR(100) PRIMARY KEY,/*Changed from int to varchar*/
	FLAT_ADDRESS VARCHAR(100) NOT NULL,
	FLAT_ROOM_COUNT INT NOT NULL
);

CREATE TABLE FLAT_ROOM (
    PLACE_ID VARCHAR(100) PRIMARY KEY NOT NULL,/*Changed from int to varchar*/
    FLAT_NUMBER VARCHAR(100) NOT NULL,/*Changed from int to varchar*/
    FLAT_ROOM_NUMBER INT NOT NULL,
    FOREIGN KEY (PLACE_ID) REFERENCES PLACE(PLACE_ID), 
    FOREIGN KEY (FLAT_NUMBER) REFERENCES FLAT(FLAT_NUMBER)
);    

CREATE TABLE STUDIO (
    PLACE_ID VARCHAR(100) PRIMARY KEY NOT NULL,/*Changed from int to varchar*/
    STUDIO_UNIT_NUMBER INT NOT NULL,
    STUDIO_FURNISHED VARCHAR(1) NOT NULL,
    FOREIGN KEY (PLACE_ID) REFERENCES PLACE(PLACE_ID),
    CONSTRAINT CON_FURNISHED CHECK (STUDIO_FURNISHED IN ('Y', 'N'))
);  

CREATE TABLE HALL (
    HALL_ID VARCHAR(100) PRIMARY KEY NOT NULL, /*Changed from int to varchar*/
    STAFF_ID INT NOT NULL,
    HALL_NAME VARCHAR(100) NOT NULL,
    HALL_ADDRESS VARCHAR(100) NOT NULL,
    HALL_PHONE VARCHAR(100) NOT NULL,
    FOREIGN KEY (STAFF_ID) REFERENCES ACC_STAFF(STAFF_ID)
);      

CREATE TABLE HALL_ROOM (
    PLACE_ID VARCHAR(100) PRIMARY KEY NOT NULL,/*Changed from int to varchar*/
    HALL_ID VARCHAR(100) NOT NULL,
	HALL_ROOM_NUMBER INT NOT NULL,
	HALL_ROOM_CATERING VARCHAR(100) NOT NULL,
    FOREIGN KEY (PLACE_ID) REFERENCES PLACE(PLACE_ID),
    FOREIGN KEY (HALL_ID) REFERENCES HALL(HALL_ID),
    CONSTRAINT CON_CATERING CHECK (HALL_ROOM_CATERING IN ('fully', 'partly'))
);